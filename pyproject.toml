[tool.poetry]
name = "magnus_extensions"
version = "0.0.0"
description = "Extensions to Magnus core"
authors = ["Vijay Vammi <mesanthu@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "magnus_extensions"}]

[tool.poetry.dependencies]
python = "^3.8"
boto3 ={ version = "*", optional = true }
kfp = {version= "^1.8.18", optional = true }
sqlalchemy = { version = "*", optional = true }
kubernetes = { version = "*", optional = true }
mlflow-skinny = { version = "*", optional = true }
magnus = { version = "^0.4.12" }

[tool.poetry.extras]
aws = ["boto3"]
kubeflow = ["kfp"]
k8s = ["kubernetes"]
mlflow = ["mlflow-skinny"]
database = ["sqlalchemy"]

[tool.poetry.dev-dependencies]
autopep8 = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
mkdocs = "*"
mkdocs-material = "*"
mypy = "^0.931"
tox = "^3.24.5"
pre-commit = "*"
commit-linter = "^1.0.2"
python-semantic-release = "^7.33.1"

# Use this section to provide the namespace to extend and implementation
[tool.poetry.plugins."catalog"]
"s3" = "magnus_extensions.catalog.s3.implementation:S3Catalog"
"k8s-pvc" = "magnus_extensions.catalog.k8s_pvc.implementation:K8sPVCatalog"

[tool.poetry.plugins."run_log_store"]
"s3" = "magnus_extensions.datastore.s3.implementation:S3Store"
"chunked-s3" = "magnus_extensions.datastore.chunked_s3.implementation:ChunkedS3Store"
"k8s-pvc" = "magnus_extensions.datastore.k8s_pvc.implementation:K8PersistentVolumeRunLogstore"
"chunked-k8s-pvc" = "magnus_extensions.datastore.chunked_k8s_pvc.implementation:ChunkedK8PersistentVolumeRunLogstore"

[tool.poetry.plugins."secrets"]
"aws-secrets-manager" = "magnus_extensions.secrets.aws.implementation:AWSSecretsManager"

[tool.poetry.plugins."executor"]
"kfp" = "magnus_extensions.executor.kubeflow.implementation:KubeFlowExecutor"
"argo" = "magnus_extensions.executor.argo.implementation:ArgoExecutor"
"k8s-job" = "magnus_extensions.executor.k8s_job.implementation:K8sJobExecutor"
"slurm-job" = "magnus_extensions.executor.slurm_job.implementation:SlurmJobExecutor"

[tool.poetry.plugins."experiment_tracker"]
"mlflow" = "magnus_extensions.experiment_tracker.mlflow.implementation:MLFlowExperimentTracker"

# Use this provide namespace of the integration
# naming convention: keep it simple.
[tool.poetry.plugins."integration"]
#S3 catalog
"s3catalog" = "magnus_extensions.catalog.s3.integration:LocalContainerCompute"
# S3 run log store
"s3runlogcontainer" = "magnus_extensions.datastore.s3.integration:LocalContainerCompute"
"s3runloglocal" = "magnus_extensions.datastore.s3.integration:LocalCompute"
# AWS secrets manager
"awssecrets" = "magnus_extensions.secrets.aws.integration:LocalContainerCompute"
#KFP executor
"kfpbuffered" = "magnus_extensions.executor.kubeflow.integration:BufferedRunLogStore"
"kfpfsrunlog" = "magnus_extensions.executor.kubeflow.integration:FileSystemRunLogStore"
"kfpfscatalog" = "magnus_extensions.executor.kubeflow.integration:FileSystemCatalog"
#Argo executor
"argobuffered" = "magnus_extensions.executor.argo.integration:BufferedRunLogStore"
"argofsrunlog" = "magnus_extensions.executor.argo.integration:FileSystemRunLogStore"
"argofscatalog" = "magnus_extensions.executor.argo.integration:FileSystemCatalog"
# Chunked S3 run log store
"chunkedfs" = "magnus_extensions.datastore.chunked_s3.integration:LocalContainerCompute"
# K8s PVC run log store
"k8spvclocal" = "magnus_extensions.datastore.k8s_pvc.integration:LocalCompute"
"k8spvccontainer" = "magnus_extensions.datastore.k8s_pvc.integration:LocalContainerCompute"
"k8spvckfp" = "magnus_extensions.datastore.k8s_pvc.integration:KfpCompute"
"k8spvcargo" = "magnus_extensions.datastore.k8s_pvc.integration:ArgoCompute"
# Chunked K8s PVC run log store
"chunkedpvclocal" = "magnus_extensions.datastore.chunked_k8s_pvc.integration:LocalCompute"
"chunkedpvccontainer" = "magnus_extensions.datastore.chunked_k8s_pvc.integration:LocalContainerCompute"
"chunkedpvckfp" = "magnus_extensions.datastore.chunked_k8s_pvc.integration:KfpCompute"
"chunkedpvcargo" = "magnus_extensions.datastore.chunked_k8s_pvc.integration:ArgoCompute"
# K8s PVC catalog
"pvccataloglocal" = "magnus_extensions.catalog.k8s_pvc.integration:LocalCompute"
"pvccatalogcontainer" = "magnus_extensions.catalog.k8s_pvc.integration:LocalContainerCompute"
"pvccatalogkfp" = "magnus_extensions.catalog.k8s_pvc.integration:KfpCompute"
"pvccatalogargo" = "magnus_extensions.catalog.k8s_pvc.integration:ArgoCompute"
# k8s-job
"k8sjobbuffered" = "magnus_extensions.k8s_job.integration:BufferedRunLogStore"
"k8sjobfsrunlog" = "magnus_extensions.k8s_job.integration:FileSystemRunLogStore"
"k8sjobfschunkedfsrunlog" = "magnus_extensions.k8s_job.integration:ChunkedFSRunLogStore"
"k8sjobffscatalog" = "magnus_extensions.k8s_job.integration:FileSystemCatalog"
# slurm-job
"slurmjobbuffered" = "magnus_extensions.slurm_job.integration:BufferedRunLogStore"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
branch = "main"
tag_commit = false
version_source = "tag_only"
major_on_zero = true
commit_version_number = false
upload_to_pypi = false
upload_to_repository = false
upload_to_release = false
